---
layout: default
example-code: |
 // create some test data
 var generator = fc.data.random.financial().filter(null);
 var data = generator(110);

 function renderChart() {
   // add a new datapoint and remove an old one
   var datum = generator(1)[0];
   data.push(datum);
   data.shift();

   // Offset the range to include the full bar for the latest value
   var dateRange = fc.util.extent(data, 'date');
   dateRange[1] = d3.time.day.offset(dateRange[1], 1);

   // create a chart
   var chart = fc.chart.linearTimeSeries()
       .xDomain(dateRange)
       .xTicks(5)
       .yNice()
       .yTicks(5);

   // compute the bollinger bands and update the y-axis domain
   var bollingerAlgorithm = fc.indicator.algorithm.bollingerBands();
   bollingerAlgorithm(data);

   chart.yDomain(fc.util.extent(data, [
      function(d) { return d.bollingerBands.upper; },
      function(d) { return d.bollingerBands.lower; }
   ]));

   // Create the gridlines and series
   var gridlines = fc.annotation.gridline();
   var candlestick = fc.series.candlestick();
   var bollingerBands = fc.indicator.renderer.bollingerBands();

   // add them to the chart via a multi-series
   var multi = fc.series.multi()
       .series([gridlines, bollingerBands, candlestick]);
   chart.plotArea(multi);

   d3.select('svg')
       .datum(data)
       .call(chart);
 }
 renderChart();

 //setInterval(renderChart, 200);

 addEventListener('resize', renderChart);
---
<div class="top-chart container">
  <div class="row">
    <div class="col-md-12">
      <svg id="top-chart" style="width: 100%; height: 250px; background: white"></svg>
    </div>

  </div>
</div>

<div class="jumbotron text-center" id="jumbo1">
  <img src="{{assets}}/images/logo.png" />
  <p>A collection of components that make it easy to build interactive charts with D3.</p>
  <a class="jumbotron-btn" a href="https://github.com/ScottLogic/d3fc">View on GitHub</a>
</div>

<script type="text/javascript">
(function() {
  {{{ page.example-code }}}
  window.onresize = renderChart;
}());
</script>

<div class="container">
  <div class="row">
    {{#each tags}}
      {{#is tag "frontpage"}}
        {{#each pages}}
          <div class="col-xs-4">
            {{! the components/ is a hack around ASSemble }}
            <a href="components/{{this.relativeLink}}">
              <div id="{{>component-id data.component}}" class="chart-small">
                {{{data.example-fixture}}}
                <div class="caption">
                  <h4>{{data.title}}</h4>
                </div>
              </div>
            </a>
          </div>
          <script type="text/javascript">
          (function() {
              var f = createFixture('#{{>component-id data.component}}', 800, null, null, function() { return true; });
              var container = f.container, data = f.data
                xScale = f.xScale, yScale = f.yScale,
                height = f.dimensions.height, width = f.dimensions.width;
              {{{data.example-code}}}
          }());
          </script>
        {{/each}}
      {{/is}}
    {{/each}}
  </div>
</div>

<div class="quick-start">
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <h1 class="text-center">QUICK START</h1>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-3 ">
        <h3>Install</h3>
        <p>A complete set of instructions for obtaining d3fc and its dependencies are available on the <a href="{{package.repository.url}}">GitHub project website</a>.</p>
      </div>
      <div class="col-sm-3 ">
        <h3>Learn</h3>
        <p>Browse the <a href="components">d3fc components</a> to determine which you need in order to build your chart. You can mix and match with any D3 code you may require to produce your chart.</p>
      </div>
      <div class="col-sm-3 ">
        <h3>Customise</h3>
        <p>The components are primarily customised via CSS, allowing you to change colors, stroke, fill and layout. However, more structural customisation is also possible via JavaScript.</p>
      </div>
      <div class="col-sm-3 ">
        <h3>Contribute</h3>
        <p>Spotted a bug? Have an idea for a feature? Please <a href="{{package.repository.url}}">pop over to GitHub and contribute</a>. If you want to contribute a new component, please read
        our <a href="{{package.repository.url}}/wiki">wiki page which describes the design goals</a>.</p>
      </div>
    </div>
  </div>
</div>

<div class="awesome">
  <div class="container">
    <div class="row">
      <div class="col-sm-5">
        <h1>D3</h1>
        <p><a href="http://d3js.org/">D3</a> is an ideal tool for creating charts, giving you complete control over how your data is rendered. However, constructing charts with D3 can be hard work!</p>
      </div>
      <div class="col-sm-2 text-center symbol">
        <h1>+</h1>
      </div>
      <div class="col-sm-5">
        <h1>d3fc</h1>
        <p>d3fc provides a set of building blocks, that follow the <a href="http://bost.ocks.org/mike/chart/">D3 component pattern</a>, allowing you to assemble charts quickly and easily, without taking away the underlying power of D3. </p>
      </div>
      <div class="col-sm-offset-1 col-sm-2 text-center symbol">
        <h1>=</h1>
      </div>
      <div class="col-sm-8">
        <h1>Awesome!</h1>
        <p>Building interactive or static charts with d3fc is a breeze - components can be assembled, configured and styled with CSS to produce a whole range of different charts.</p>
      </div>
    </div>
  </div>
</div>
